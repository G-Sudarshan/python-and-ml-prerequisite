# -*- coding: utf-8 -*-
"""day-6-python-and-ml-pre.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uHvzbslycYTpAesy2qvoq_tgKVa4bNPa
"""

import pandas as pd
items=pd.DataFrame([['apple','1',15],['melon','2',20],['mango','3',30],['apple','1',45],['melon','3',67]],columns=['fn','code','price'])

items

item_onehot=pd.get_dummies(items)

item_onehot

items=pd.DataFrame([['apple','1',15,'g'],['melon','2',20,'a'],['mango','3',30,'e'],['apple','1',45,'a'],['melon','3',67,'e']],columns=['fn','code','price','grade'])

items

map_items={'e':1, 'g':2,'a':3}
items['r']=items.grade.map(map_items)
items

items.drop('grade',axis=1m)

# binning
stud=pd.read_csv('/content/StudentsPerformance.csv')
stud

pd.qcut(stud['math score'],q=4)

label=['c','b','A']
stud['grades']=pd.qcut(stud['math score'], q=[0,0.4,0.8,1],labels=label)
stud

# data scaling - normalization, standardization
df=pd.read_csv('/content/scale data.csv')

df

from sklearn import preprocessing
from sklearn.preprocessing import StandardScaler

x=StandardScaler().fit_transform(df)

df1=pd.DataFrame(x)

df1

df.dropna(inplace=True)
x1= preprocessing.normalize(df)

x1

# data reduction